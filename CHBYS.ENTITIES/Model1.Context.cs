//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CHBYS.ENTITIES
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CARIHESAPBILGIYONETIMSISTEMIEntities : DbContext
    {
        public CARIHESAPBILGIYONETIMSISTEMIEntities()
            : base("name=CARIHESAPBILGIYONETIMSISTEMIEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<V_authorization_code> V_authorization_code { get; set; }
        public virtual DbSet<V_authorization_code_type> V_authorization_code_type { get; set; }
        public virtual DbSet<V_bank> V_bank { get; set; }
        public virtual DbSet<V_barcode> V_barcode { get; set; }
        public virtual DbSet<V_brand> V_brand { get; set; }
        public virtual DbSet<V_cargo_company> V_cargo_company { get; set; }
        public virtual DbSet<V_cargo_company_name> V_cargo_company_name { get; set; }
        public virtual DbSet<V_city> V_city { get; set; }
        public virtual DbSet<V_company> V_company { get; set; }
        public virtual DbSet<V_country> V_country { get; set; }
        public virtual DbSet<V_county> V_county { get; set; }
        public virtual DbSet<V_currency> V_currency { get; set; }
        public virtual DbSet<V_discountcart> V_discountcart { get; set; }
        public virtual DbSet<V_E_invoice_type> V_E_invoice_type { get; set; }
        public virtual DbSet<V_e_waybill> V_e_waybill { get; set; }
        public virtual DbSet<V_employee_overtime> V_employee_overtime { get; set; }
        public virtual DbSet<V_employee_permission> V_employee_permission { get; set; }
        public virtual DbSet<V_employee_position> V_employee_position { get; set; }
        public virtual DbSet<V_employees> V_employees { get; set; }
        public virtual DbSet<V_group_code> V_group_code { get; set; }
        public virtual DbSet<V_group_type> V_group_type { get; set; }
        public virtual DbSet<V_imports_export> V_imports_export { get; set; }
        public virtual DbSet<V_inventory> V_inventory { get; set; }
        public virtual DbSet<V_main_unit> V_main_unit { get; set; }
        public virtual DbSet<V_natification> V_natification { get; set; }
        public virtual DbSet<V_orders> V_orders { get; set; }
        public virtual DbSet<V_payment_method> V_payment_method { get; set; }
        public virtual DbSet<V_payment_plan> V_payment_plan { get; set; }
        public virtual DbSet<V_product> V_product { get; set; }
        public virtual DbSet<V_product_refund> V_product_refund { get; set; }
        public virtual DbSet<V_product_type> V_product_type { get; set; }
        public virtual DbSet<V_repository> V_repository { get; set; }
        public virtual DbSet<V_sector> V_sector { get; set; }
        public virtual DbSet<V_shipment_slip> V_shipment_slip { get; set; }
        public virtual DbSet<V_sold_product> V_sold_product { get; set; }
        public virtual DbSet<V_suppliers> V_suppliers { get; set; }
        public virtual DbSet<V_suppliers_type> V_suppliers_type { get; set; }
        public virtual DbSet<V_Tax_Administration> V_Tax_Administration { get; set; }
        public virtual DbSet<V_transport_type> V_transport_type { get; set; }
        public virtual DbSet<V_Users> V_Users { get; set; }
        public virtual DbSet<V_Users_authority> V_Users_authority { get; set; }
        public virtual DbSet<V_vehicle> V_vehicle { get; set; }
        public virtual DbSet<V_vehicle_type> V_vehicle_type { get; set; }
    
        public virtual int SP_authorization_code_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_authorization_code_DELETE", iDParameter);
        }
    
        public virtual int SP_authorization_code_INSERT(Nullable<int> aUTHORIZATION_CODE, string eXPLANATION, Nullable<int> aUTHORIZATION_CODE_TYPE)
        {
            var aUTHORIZATION_CODEParameter = aUTHORIZATION_CODE.HasValue ?
                new ObjectParameter("AUTHORIZATION_CODE", aUTHORIZATION_CODE) :
                new ObjectParameter("AUTHORIZATION_CODE", typeof(int));
    
            var eXPLANATIONParameter = eXPLANATION != null ?
                new ObjectParameter("EXPLANATION", eXPLANATION) :
                new ObjectParameter("EXPLANATION", typeof(string));
    
            var aUTHORIZATION_CODE_TYPEParameter = aUTHORIZATION_CODE_TYPE.HasValue ?
                new ObjectParameter("AUTHORIZATION_CODE_TYPE", aUTHORIZATION_CODE_TYPE) :
                new ObjectParameter("AUTHORIZATION_CODE_TYPE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_authorization_code_INSERT", aUTHORIZATION_CODEParameter, eXPLANATIONParameter, aUTHORIZATION_CODE_TYPEParameter);
        }
    
        public virtual int SP_authorization_code_type_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_authorization_code_type_DELETE", iDParameter);
        }
    
        public virtual int SP_authorization_code_type_INSERT(string tYPE_NAME)
        {
            var tYPE_NAMEParameter = tYPE_NAME != null ?
                new ObjectParameter("TYPE_NAME", tYPE_NAME) :
                new ObjectParameter("TYPE_NAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_authorization_code_type_INSERT", tYPE_NAMEParameter);
        }
    
        public virtual int SP_bank_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_bank_DELETE", iDParameter);
        }
    
        public virtual int SP_bank_INSERT(string bANK_NAME, string eXPLANATION)
        {
            var bANK_NAMEParameter = bANK_NAME != null ?
                new ObjectParameter("BANK_NAME", bANK_NAME) :
                new ObjectParameter("BANK_NAME", typeof(string));
    
            var eXPLANATIONParameter = eXPLANATION != null ?
                new ObjectParameter("EXPLANATION", eXPLANATION) :
                new ObjectParameter("EXPLANATION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_bank_INSERT", bANK_NAMEParameter, eXPLANATIONParameter);
        }
    
        public virtual int SP_barcode_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_barcode_DELETE", iDParameter);
        }
    
        public virtual int SP_barcode_INSERT(Nullable<int> bARCODE, Nullable<decimal> fiyad, string cOMMENT)
        {
            var bARCODEParameter = bARCODE.HasValue ?
                new ObjectParameter("BARCODE", bARCODE) :
                new ObjectParameter("BARCODE", typeof(int));
    
            var fiyadParameter = fiyad.HasValue ?
                new ObjectParameter("fiyad", fiyad) :
                new ObjectParameter("fiyad", typeof(decimal));
    
            var cOMMENTParameter = cOMMENT != null ?
                new ObjectParameter("COMMENT", cOMMENT) :
                new ObjectParameter("COMMENT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_barcode_INSERT", bARCODEParameter, fiyadParameter, cOMMENTParameter);
        }
    
        public virtual int SP_brand_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_brand_DELETE", iDParameter);
        }
    
        public virtual int SP_brand_INSERT(Nullable<int> cODE, string bRANDNAME)
        {
            var cODEParameter = cODE.HasValue ?
                new ObjectParameter("CODE", cODE) :
                new ObjectParameter("CODE", typeof(int));
    
            var bRANDNAMEParameter = bRANDNAME != null ?
                new ObjectParameter("BRANDNAME", bRANDNAME) :
                new ObjectParameter("BRANDNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_brand_INSERT", cODEParameter, bRANDNAMEParameter);
        }
    
        public virtual int SP_cargo_company_name_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_cargo_company_name_DELETE", iDParameter);
        }
    
        public virtual int SP_cargo_company_name_INSERT(string cOMPANY_NAME, string eXPLANATION)
        {
            var cOMPANY_NAMEParameter = cOMPANY_NAME != null ?
                new ObjectParameter("COMPANY_NAME", cOMPANY_NAME) :
                new ObjectParameter("COMPANY_NAME", typeof(string));
    
            var eXPLANATIONParameter = eXPLANATION != null ?
                new ObjectParameter("EXPLANATION", eXPLANATION) :
                new ObjectParameter("EXPLANATION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_cargo_company_name_INSERT", cOMPANY_NAMEParameter, eXPLANATIONParameter);
        }
    
        public virtual int SP_city_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_city_DELETE", iDParameter);
        }
    
        public virtual int SP_city_INSERT(Nullable<int> pLATECODE, string cITYNAME)
        {
            var pLATECODEParameter = pLATECODE.HasValue ?
                new ObjectParameter("PLATECODE", pLATECODE) :
                new ObjectParameter("PLATECODE", typeof(int));
    
            var cITYNAMEParameter = cITYNAME != null ?
                new ObjectParameter("CITYNAME", cITYNAME) :
                new ObjectParameter("CITYNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_city_INSERT", pLATECODEParameter, cITYNAMEParameter);
        }
    
        public virtual int SP_city_UPDATE(Nullable<int> pLATECODE, string cITYNAME)
        {
            var pLATECODEParameter = pLATECODE.HasValue ?
                new ObjectParameter("PLATECODE", pLATECODE) :
                new ObjectParameter("PLATECODE", typeof(int));
    
            var cITYNAMEParameter = cITYNAME != null ?
                new ObjectParameter("CITYNAME", cITYNAME) :
                new ObjectParameter("CITYNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_city_UPDATE", pLATECODEParameter, cITYNAMEParameter);
        }
    
        public virtual int SP_company_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_company_DELETE", iDParameter);
        }
    
        public virtual int SP_company_INSERT(string cOMPANYNAME, Nullable<int> cOMPANTTYPE, Nullable<int> cITY, Nullable<int> cOUNTY, Nullable<int> cOUNTRY, Nullable<int> tAXADMINISTRATOR, string tAXNUMBER)
        {
            var cOMPANYNAMEParameter = cOMPANYNAME != null ?
                new ObjectParameter("COMPANYNAME", cOMPANYNAME) :
                new ObjectParameter("COMPANYNAME", typeof(string));
    
            var cOMPANTTYPEParameter = cOMPANTTYPE.HasValue ?
                new ObjectParameter("COMPANTTYPE", cOMPANTTYPE) :
                new ObjectParameter("COMPANTTYPE", typeof(int));
    
            var cITYParameter = cITY.HasValue ?
                new ObjectParameter("CITY", cITY) :
                new ObjectParameter("CITY", typeof(int));
    
            var cOUNTYParameter = cOUNTY.HasValue ?
                new ObjectParameter("COUNTY", cOUNTY) :
                new ObjectParameter("COUNTY", typeof(int));
    
            var cOUNTRYParameter = cOUNTRY.HasValue ?
                new ObjectParameter("COUNTRY", cOUNTRY) :
                new ObjectParameter("COUNTRY", typeof(int));
    
            var tAXADMINISTRATORParameter = tAXADMINISTRATOR.HasValue ?
                new ObjectParameter("TAXADMINISTRATOR", tAXADMINISTRATOR) :
                new ObjectParameter("TAXADMINISTRATOR", typeof(int));
    
            var tAXNUMBERParameter = tAXNUMBER != null ?
                new ObjectParameter("TAXNUMBER", tAXNUMBER) :
                new ObjectParameter("TAXNUMBER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_company_INSERT", cOMPANYNAMEParameter, cOMPANTTYPEParameter, cITYParameter, cOUNTYParameter, cOUNTRYParameter, tAXADMINISTRATORParameter, tAXNUMBERParameter);
        }
    
        public virtual int SP_company_type_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_company_type_DELETE", iDParameter);
        }
    
        public virtual int SP_company_type_INSERT(string tYPENAME)
        {
            var tYPENAMEParameter = tYPENAME != null ?
                new ObjectParameter("TYPENAME", tYPENAME) :
                new ObjectParameter("TYPENAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_company_type_INSERT", tYPENAMEParameter);
        }
    
        public virtual int SP_company_type_UPDATE(string tYPENAME, Nullable<int> iD)
        {
            var tYPENAMEParameter = tYPENAME != null ?
                new ObjectParameter("TYPENAME", tYPENAME) :
                new ObjectParameter("TYPENAME", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_company_type_UPDATE", tYPENAMEParameter, iDParameter);
        }
    
        public virtual int SP_country_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_country_DELETE", iDParameter);
        }
    
        public virtual int SP_country_INSERT(string cOUNTRYNAME, string cOUNTRYPLATE, string cOUNTRYNAMEEN, string eDECLARATION)
        {
            var cOUNTRYNAMEParameter = cOUNTRYNAME != null ?
                new ObjectParameter("COUNTRYNAME", cOUNTRYNAME) :
                new ObjectParameter("COUNTRYNAME", typeof(string));
    
            var cOUNTRYPLATEParameter = cOUNTRYPLATE != null ?
                new ObjectParameter("COUNTRYPLATE", cOUNTRYPLATE) :
                new ObjectParameter("COUNTRYPLATE", typeof(string));
    
            var cOUNTRYNAMEENParameter = cOUNTRYNAMEEN != null ?
                new ObjectParameter("COUNTRYNAMEEN", cOUNTRYNAMEEN) :
                new ObjectParameter("COUNTRYNAMEEN", typeof(string));
    
            var eDECLARATIONParameter = eDECLARATION != null ?
                new ObjectParameter("EDECLARATION", eDECLARATION) :
                new ObjectParameter("EDECLARATION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_country_INSERT", cOUNTRYNAMEParameter, cOUNTRYPLATEParameter, cOUNTRYNAMEENParameter, eDECLARATIONParameter);
        }
    
        public virtual int SP_county_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_county_DELETE", iDParameter);
        }
    
        public virtual int SP_county_INSERT(Nullable<int> pLATECODE, string cOUNTYNAME)
        {
            var pLATECODEParameter = pLATECODE.HasValue ?
                new ObjectParameter("PLATECODE", pLATECODE) :
                new ObjectParameter("PLATECODE", typeof(int));
    
            var cOUNTYNAMEParameter = cOUNTYNAME != null ?
                new ObjectParameter("COUNTYNAME", cOUNTYNAME) :
                new ObjectParameter("COUNTYNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_county_INSERT", pLATECODEParameter, cOUNTYNAMEParameter);
        }
    
        public virtual int SP_currency_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_currency_DELETE", iDParameter);
        }
    
        public virtual int SP_currency_INSERT(string uNIT)
        {
            var uNITParameter = uNIT != null ?
                new ObjectParameter("UNIT", uNIT) :
                new ObjectParameter("UNIT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_currency_INSERT", uNITParameter);
        }
    
        public virtual int SP_discountcart_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_discountcart_DELETE", iDParameter);
        }
    
        public virtual int SP_discountcart_INSERT(string tYPE_NAME, string cODE, Nullable<bool> sTATU, string fIGURE, Nullable<int> vALUE, Nullable<int> fORMULA)
        {
            var tYPE_NAMEParameter = tYPE_NAME != null ?
                new ObjectParameter("TYPE_NAME", tYPE_NAME) :
                new ObjectParameter("TYPE_NAME", typeof(string));
    
            var cODEParameter = cODE != null ?
                new ObjectParameter("CODE", cODE) :
                new ObjectParameter("CODE", typeof(string));
    
            var sTATUParameter = sTATU.HasValue ?
                new ObjectParameter("STATU", sTATU) :
                new ObjectParameter("STATU", typeof(bool));
    
            var fIGUREParameter = fIGURE != null ?
                new ObjectParameter("FIGURE", fIGURE) :
                new ObjectParameter("FIGURE", typeof(string));
    
            var vALUEParameter = vALUE.HasValue ?
                new ObjectParameter("VALUE", vALUE) :
                new ObjectParameter("VALUE", typeof(int));
    
            var fORMULAParameter = fORMULA.HasValue ?
                new ObjectParameter("FORMULA", fORMULA) :
                new ObjectParameter("FORMULA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_discountcart_INSERT", tYPE_NAMEParameter, cODEParameter, sTATUParameter, fIGUREParameter, vALUEParameter, fORMULAParameter);
        }
    
        public virtual int SP_E_invoice_type_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_E_invoice_type_DELETE", iDParameter);
        }
    
        public virtual int SP_E_invoice_type_INSERT(string e_INVOICE_TYPE)
        {
            var e_INVOICE_TYPEParameter = e_INVOICE_TYPE != null ?
                new ObjectParameter("E_INVOICE_TYPE", e_INVOICE_TYPE) :
                new ObjectParameter("E_INVOICE_TYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_E_invoice_type_INSERT", e_INVOICE_TYPEParameter);
        }
    
        public virtual int SP_e_waybill_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_e_waybill_DELETE", iDParameter);
        }
    
        public virtual int SP_e_waybill_INSERT(string sUBSTATION, string rECEIPT_NO, string dOCUMNET_NO, string wAYBILL_NO, Nullable<System.DateTime> dATE, string cURRENCY, string dELIVERY_ADRESS, string eXPLANATION, string bARCODE, Nullable<System.DateTime> cARGO_SHIPPING_DATE, string cARGO_INVOICE_NO, Nullable<decimal> sUBTOTAL, Nullable<decimal> cOST, Nullable<decimal> dISCOUNT, Nullable<decimal> tOTAL, Nullable<decimal> kDV, Nullable<decimal> gRAND_TOTAL)
        {
            var sUBSTATIONParameter = sUBSTATION != null ?
                new ObjectParameter("SUBSTATION", sUBSTATION) :
                new ObjectParameter("SUBSTATION", typeof(string));
    
            var rECEIPT_NOParameter = rECEIPT_NO != null ?
                new ObjectParameter("RECEIPT_NO", rECEIPT_NO) :
                new ObjectParameter("RECEIPT_NO", typeof(string));
    
            var dOCUMNET_NOParameter = dOCUMNET_NO != null ?
                new ObjectParameter("DOCUMNET_NO", dOCUMNET_NO) :
                new ObjectParameter("DOCUMNET_NO", typeof(string));
    
            var wAYBILL_NOParameter = wAYBILL_NO != null ?
                new ObjectParameter("WAYBILL_NO", wAYBILL_NO) :
                new ObjectParameter("WAYBILL_NO", typeof(string));
    
            var dATEParameter = dATE.HasValue ?
                new ObjectParameter("DATE", dATE) :
                new ObjectParameter("DATE", typeof(System.DateTime));
    
            var cURRENCYParameter = cURRENCY != null ?
                new ObjectParameter("CURRENCY", cURRENCY) :
                new ObjectParameter("CURRENCY", typeof(string));
    
            var dELIVERY_ADRESSParameter = dELIVERY_ADRESS != null ?
                new ObjectParameter("DELIVERY_ADRESS", dELIVERY_ADRESS) :
                new ObjectParameter("DELIVERY_ADRESS", typeof(string));
    
            var eXPLANATIONParameter = eXPLANATION != null ?
                new ObjectParameter("EXPLANATION", eXPLANATION) :
                new ObjectParameter("EXPLANATION", typeof(string));
    
            var bARCODEParameter = bARCODE != null ?
                new ObjectParameter("BARCODE", bARCODE) :
                new ObjectParameter("BARCODE", typeof(string));
    
            var cARGO_SHIPPING_DATEParameter = cARGO_SHIPPING_DATE.HasValue ?
                new ObjectParameter("CARGO_SHIPPING_DATE", cARGO_SHIPPING_DATE) :
                new ObjectParameter("CARGO_SHIPPING_DATE", typeof(System.DateTime));
    
            var cARGO_INVOICE_NOParameter = cARGO_INVOICE_NO != null ?
                new ObjectParameter("CARGO_INVOICE_NO", cARGO_INVOICE_NO) :
                new ObjectParameter("CARGO_INVOICE_NO", typeof(string));
    
            var sUBTOTALParameter = sUBTOTAL.HasValue ?
                new ObjectParameter("SUBTOTAL", sUBTOTAL) :
                new ObjectParameter("SUBTOTAL", typeof(decimal));
    
            var cOSTParameter = cOST.HasValue ?
                new ObjectParameter("COST", cOST) :
                new ObjectParameter("COST", typeof(decimal));
    
            var dISCOUNTParameter = dISCOUNT.HasValue ?
                new ObjectParameter("DISCOUNT", dISCOUNT) :
                new ObjectParameter("DISCOUNT", typeof(decimal));
    
            var tOTALParameter = tOTAL.HasValue ?
                new ObjectParameter("TOTAL", tOTAL) :
                new ObjectParameter("TOTAL", typeof(decimal));
    
            var kDVParameter = kDV.HasValue ?
                new ObjectParameter("KDV", kDV) :
                new ObjectParameter("KDV", typeof(decimal));
    
            var gRAND_TOTALParameter = gRAND_TOTAL.HasValue ?
                new ObjectParameter("GRAND_TOTAL", gRAND_TOTAL) :
                new ObjectParameter("GRAND_TOTAL", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_e_waybill_INSERT", sUBSTATIONParameter, rECEIPT_NOParameter, dOCUMNET_NOParameter, wAYBILL_NOParameter, dATEParameter, cURRENCYParameter, dELIVERY_ADRESSParameter, eXPLANATIONParameter, bARCODEParameter, cARGO_SHIPPING_DATEParameter, cARGO_INVOICE_NOParameter, sUBTOTALParameter, cOSTParameter, dISCOUNTParameter, tOTALParameter, kDVParameter, gRAND_TOTALParameter);
        }
    
        public virtual int SP_employee_overtime_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_employee_overtime_DELETE", iDParameter);
        }
    
        public virtual int SP_employee_overtime_INSERT(Nullable<int> employee, Nullable<System.DateTime> bUSINESS_START, Nullable<System.DateTime> bUSINESS_FINISH)
        {
            var employeeParameter = employee.HasValue ?
                new ObjectParameter("employee", employee) :
                new ObjectParameter("employee", typeof(int));
    
            var bUSINESS_STARTParameter = bUSINESS_START.HasValue ?
                new ObjectParameter("BUSINESS_START", bUSINESS_START) :
                new ObjectParameter("BUSINESS_START", typeof(System.DateTime));
    
            var bUSINESS_FINISHParameter = bUSINESS_FINISH.HasValue ?
                new ObjectParameter("BUSINESS_FINISH", bUSINESS_FINISH) :
                new ObjectParameter("BUSINESS_FINISH", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_employee_overtime_INSERT", employeeParameter, bUSINESS_STARTParameter, bUSINESS_FINISHParameter);
        }
    
        public virtual int SP_employee_permission_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_employee_permission_DELETE", iDParameter);
        }
    
        public virtual int SP_employee_permission_INSERT(string pERMISSION_REASON, Nullable<System.DateTime> pERMISSION_DATE)
        {
            var pERMISSION_REASONParameter = pERMISSION_REASON != null ?
                new ObjectParameter("PERMISSION_REASON", pERMISSION_REASON) :
                new ObjectParameter("PERMISSION_REASON", typeof(string));
    
            var pERMISSION_DATEParameter = pERMISSION_DATE.HasValue ?
                new ObjectParameter("PERMISSION_DATE", pERMISSION_DATE) :
                new ObjectParameter("PERMISSION_DATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_employee_permission_INSERT", pERMISSION_REASONParameter, pERMISSION_DATEParameter);
        }
    
        public virtual int SP_employee_position_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_employee_position_DELETE", iDParameter);
        }
    
        public virtual int SP_employee_position_INSERT(string pOSITION)
        {
            var pOSITIONParameter = pOSITION != null ?
                new ObjectParameter("POSITION", pOSITION) :
                new ObjectParameter("POSITION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_employee_position_INSERT", pOSITIONParameter);
        }
    
        public virtual int SP_employees_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_employees_DELETE", iDParameter);
        }
    
        public virtual int SP_employees_INSERT(string eMPLOYEENAME, string eMPLOYEELASTNAME, Nullable<int> eMPLOYEEPOSITION, string eMPLOYEETC, Nullable<int> pERFORMANS, Nullable<decimal> sALARY)
        {
            var eMPLOYEENAMEParameter = eMPLOYEENAME != null ?
                new ObjectParameter("EMPLOYEENAME", eMPLOYEENAME) :
                new ObjectParameter("EMPLOYEENAME", typeof(string));
    
            var eMPLOYEELASTNAMEParameter = eMPLOYEELASTNAME != null ?
                new ObjectParameter("EMPLOYEELASTNAME", eMPLOYEELASTNAME) :
                new ObjectParameter("EMPLOYEELASTNAME", typeof(string));
    
            var eMPLOYEEPOSITIONParameter = eMPLOYEEPOSITION.HasValue ?
                new ObjectParameter("EMPLOYEEPOSITION", eMPLOYEEPOSITION) :
                new ObjectParameter("EMPLOYEEPOSITION", typeof(int));
    
            var eMPLOYEETCParameter = eMPLOYEETC != null ?
                new ObjectParameter("EMPLOYEETC", eMPLOYEETC) :
                new ObjectParameter("EMPLOYEETC", typeof(string));
    
            var pERFORMANSParameter = pERFORMANS.HasValue ?
                new ObjectParameter("PERFORMANS", pERFORMANS) :
                new ObjectParameter("PERFORMANS", typeof(int));
    
            var sALARYParameter = sALARY.HasValue ?
                new ObjectParameter("SALARY", sALARY) :
                new ObjectParameter("SALARY", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_employees_INSERT", eMPLOYEENAMEParameter, eMPLOYEELASTNAMEParameter, eMPLOYEEPOSITIONParameter, eMPLOYEETCParameter, pERFORMANSParameter, sALARYParameter);
        }
    
        public virtual int SP_group_code_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_group_code_DELETE", iDParameter);
        }
    
        public virtual int SP_group_code_INSERT(Nullable<int> cODE, string eXPLANATION, Nullable<int> gROUPTYPE)
        {
            var cODEParameter = cODE.HasValue ?
                new ObjectParameter("CODE", cODE) :
                new ObjectParameter("CODE", typeof(int));
    
            var eXPLANATIONParameter = eXPLANATION != null ?
                new ObjectParameter("EXPLANATION", eXPLANATION) :
                new ObjectParameter("EXPLANATION", typeof(string));
    
            var gROUPTYPEParameter = gROUPTYPE.HasValue ?
                new ObjectParameter("GROUPTYPE", gROUPTYPE) :
                new ObjectParameter("GROUPTYPE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_group_code_INSERT", cODEParameter, eXPLANATIONParameter, gROUPTYPEParameter);
        }
    
        public virtual int SP_group_type_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_group_type_DELETE", iDParameter);
        }
    
        public virtual int SP_group_type_INSERT(string tYPE)
        {
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_group_type_INSERT", tYPEParameter);
        }
    
        public virtual int SP_imports_export_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_imports_export_DELETE", iDParameter);
        }
    
        public virtual int SP_imports_export_INSERT(string tYPE, string cODE, string dOCUMENT_NO, string cURRENCY, string cARGO_NO, Nullable<int> cITY, Nullable<int> cOUNTY, Nullable<int> cOUNTRY, Nullable<int> iNTERMADIARYBANK, Nullable<int> pAYMENTMETHOD, Nullable<int> sUPPLIERS, Nullable<int> tRANSPORTTYPE)
        {
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            var cODEParameter = cODE != null ?
                new ObjectParameter("CODE", cODE) :
                new ObjectParameter("CODE", typeof(string));
    
            var dOCUMENT_NOParameter = dOCUMENT_NO != null ?
                new ObjectParameter("DOCUMENT_NO", dOCUMENT_NO) :
                new ObjectParameter("DOCUMENT_NO", typeof(string));
    
            var cURRENCYParameter = cURRENCY != null ?
                new ObjectParameter("CURRENCY", cURRENCY) :
                new ObjectParameter("CURRENCY", typeof(string));
    
            var cARGO_NOParameter = cARGO_NO != null ?
                new ObjectParameter("CARGO_NO", cARGO_NO) :
                new ObjectParameter("CARGO_NO", typeof(string));
    
            var cITYParameter = cITY.HasValue ?
                new ObjectParameter("CITY", cITY) :
                new ObjectParameter("CITY", typeof(int));
    
            var cOUNTYParameter = cOUNTY.HasValue ?
                new ObjectParameter("COUNTY", cOUNTY) :
                new ObjectParameter("COUNTY", typeof(int));
    
            var cOUNTRYParameter = cOUNTRY.HasValue ?
                new ObjectParameter("COUNTRY", cOUNTRY) :
                new ObjectParameter("COUNTRY", typeof(int));
    
            var iNTERMADIARYBANKParameter = iNTERMADIARYBANK.HasValue ?
                new ObjectParameter("INTERMADIARYBANK", iNTERMADIARYBANK) :
                new ObjectParameter("INTERMADIARYBANK", typeof(int));
    
            var pAYMENTMETHODParameter = pAYMENTMETHOD.HasValue ?
                new ObjectParameter("PAYMENTMETHOD", pAYMENTMETHOD) :
                new ObjectParameter("PAYMENTMETHOD", typeof(int));
    
            var sUPPLIERSParameter = sUPPLIERS.HasValue ?
                new ObjectParameter("SUPPLIERS", sUPPLIERS) :
                new ObjectParameter("SUPPLIERS", typeof(int));
    
            var tRANSPORTTYPEParameter = tRANSPORTTYPE.HasValue ?
                new ObjectParameter("TRANSPORTTYPE", tRANSPORTTYPE) :
                new ObjectParameter("TRANSPORTTYPE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_imports_export_INSERT", tYPEParameter, cODEParameter, dOCUMENT_NOParameter, cURRENCYParameter, cARGO_NOParameter, cITYParameter, cOUNTYParameter, cOUNTRYParameter, iNTERMADIARYBANKParameter, pAYMENTMETHODParameter, sUPPLIERSParameter, tRANSPORTTYPEParameter);
        }
    
        public virtual int SP_inventory_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_inventory_DELETE", iDParameter);
        }
    
        public virtual int SP_inventory_INSERT(Nullable<int> sHELF_LIFE, Nullable<int> wARRANTY_PERIOD, Nullable<double> qUANTITY, string nOTE, Nullable<int> aUTHORIZATINCODE, Nullable<int> pAYMENTPLAN, Nullable<int> pRODUCTNAME, Nullable<int> sUPPLIERS)
        {
            var sHELF_LIFEParameter = sHELF_LIFE.HasValue ?
                new ObjectParameter("SHELF_LIFE", sHELF_LIFE) :
                new ObjectParameter("SHELF_LIFE", typeof(int));
    
            var wARRANTY_PERIODParameter = wARRANTY_PERIOD.HasValue ?
                new ObjectParameter("WARRANTY_PERIOD", wARRANTY_PERIOD) :
                new ObjectParameter("WARRANTY_PERIOD", typeof(int));
    
            var qUANTITYParameter = qUANTITY.HasValue ?
                new ObjectParameter("QUANTITY", qUANTITY) :
                new ObjectParameter("QUANTITY", typeof(double));
    
            var nOTEParameter = nOTE != null ?
                new ObjectParameter("NOTE", nOTE) :
                new ObjectParameter("NOTE", typeof(string));
    
            var aUTHORIZATINCODEParameter = aUTHORIZATINCODE.HasValue ?
                new ObjectParameter("AUTHORIZATINCODE", aUTHORIZATINCODE) :
                new ObjectParameter("AUTHORIZATINCODE", typeof(int));
    
            var pAYMENTPLANParameter = pAYMENTPLAN.HasValue ?
                new ObjectParameter("PAYMENTPLAN", pAYMENTPLAN) :
                new ObjectParameter("PAYMENTPLAN", typeof(int));
    
            var pRODUCTNAMEParameter = pRODUCTNAME.HasValue ?
                new ObjectParameter("PRODUCTNAME", pRODUCTNAME) :
                new ObjectParameter("PRODUCTNAME", typeof(int));
    
            var sUPPLIERSParameter = sUPPLIERS.HasValue ?
                new ObjectParameter("SUPPLIERS", sUPPLIERS) :
                new ObjectParameter("SUPPLIERS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_inventory_INSERT", sHELF_LIFEParameter, wARRANTY_PERIODParameter, qUANTITYParameter, nOTEParameter, aUTHORIZATINCODEParameter, pAYMENTPLANParameter, pRODUCTNAMEParameter, sUPPLIERSParameter);
        }
    
        public virtual int SP_main_unit_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_main_unit_DELETE", iDParameter);
        }
    
        public virtual int SP_main_unit_INSERT(string uNIT_NAME, string cOMMENT)
        {
            var uNIT_NAMEParameter = uNIT_NAME != null ?
                new ObjectParameter("UNIT_NAME", uNIT_NAME) :
                new ObjectParameter("UNIT_NAME", typeof(string));
    
            var cOMMENTParameter = cOMMENT != null ?
                new ObjectParameter("COMMENT", cOMMENT) :
                new ObjectParameter("COMMENT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_main_unit_INSERT", uNIT_NAMEParameter, cOMMENTParameter);
        }
    
        public virtual int SP_natification_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_natification_DELETE", iDParameter);
        }
    
        public virtual int SP_natification_INSERT(string eXPLANATION, Nullable<int> ekleyenk)
        {
            var eXPLANATIONParameter = eXPLANATION != null ?
                new ObjectParameter("EXPLANATION", eXPLANATION) :
                new ObjectParameter("EXPLANATION", typeof(string));
    
            var ekleyenkParameter = ekleyenk.HasValue ?
                new ObjectParameter("ekleyenk", ekleyenk) :
                new ObjectParameter("ekleyenk", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_natification_INSERT", eXPLANATIONParameter, ekleyenkParameter);
        }
    
        public virtual int SP_orders_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_orders_DELETE", iDParameter);
        }
    
        public virtual int SP_orders_INSERT(string oRDER_NAME, string sLIP_NO, string sTATU, string dOCUMENT_NO, Nullable<System.DateTime> dATE, Nullable<decimal> cOST, Nullable<decimal> tOTAL, string oRDERED_GOODS, string eXPLANATION)
        {
            var oRDER_NAMEParameter = oRDER_NAME != null ?
                new ObjectParameter("ORDER_NAME", oRDER_NAME) :
                new ObjectParameter("ORDER_NAME", typeof(string));
    
            var sLIP_NOParameter = sLIP_NO != null ?
                new ObjectParameter("SLIP_NO", sLIP_NO) :
                new ObjectParameter("SLIP_NO", typeof(string));
    
            var sTATUParameter = sTATU != null ?
                new ObjectParameter("STATU", sTATU) :
                new ObjectParameter("STATU", typeof(string));
    
            var dOCUMENT_NOParameter = dOCUMENT_NO != null ?
                new ObjectParameter("DOCUMENT_NO", dOCUMENT_NO) :
                new ObjectParameter("DOCUMENT_NO", typeof(string));
    
            var dATEParameter = dATE.HasValue ?
                new ObjectParameter("DATE", dATE) :
                new ObjectParameter("DATE", typeof(System.DateTime));
    
            var cOSTParameter = cOST.HasValue ?
                new ObjectParameter("COST", cOST) :
                new ObjectParameter("COST", typeof(decimal));
    
            var tOTALParameter = tOTAL.HasValue ?
                new ObjectParameter("TOTAL", tOTAL) :
                new ObjectParameter("TOTAL", typeof(decimal));
    
            var oRDERED_GOODSParameter = oRDERED_GOODS != null ?
                new ObjectParameter("ORDERED_GOODS", oRDERED_GOODS) :
                new ObjectParameter("ORDERED_GOODS", typeof(string));
    
            var eXPLANATIONParameter = eXPLANATION != null ?
                new ObjectParameter("EXPLANATION", eXPLANATION) :
                new ObjectParameter("EXPLANATION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_orders_INSERT", oRDER_NAMEParameter, sLIP_NOParameter, sTATUParameter, dOCUMENT_NOParameter, dATEParameter, cOSTParameter, tOTALParameter, oRDERED_GOODSParameter, eXPLANATIONParameter);
        }
    
        public virtual int SP_payment_method_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_payment_method_DELETE", iDParameter);
        }
    
        public virtual int SP_payment_method_INSERT(string mETHOD, string eXPLANATION)
        {
            var mETHODParameter = mETHOD != null ?
                new ObjectParameter("METHOD", mETHOD) :
                new ObjectParameter("METHOD", typeof(string));
    
            var eXPLANATIONParameter = eXPLANATION != null ?
                new ObjectParameter("EXPLANATION", eXPLANATION) :
                new ObjectParameter("EXPLANATION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_payment_method_INSERT", mETHODParameter, eXPLANATIONParameter);
        }
    
        public virtual int SP_payment_plan_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_payment_plan_DELETE", iDParameter);
        }
    
        public virtual int SP_payment_plan_INSERT(Nullable<int> cODE, Nullable<int> dISCOUNT, string eXPLANATION)
        {
            var cODEParameter = cODE.HasValue ?
                new ObjectParameter("CODE", cODE) :
                new ObjectParameter("CODE", typeof(int));
    
            var dISCOUNTParameter = dISCOUNT.HasValue ?
                new ObjectParameter("DISCOUNT", dISCOUNT) :
                new ObjectParameter("DISCOUNT", typeof(int));
    
            var eXPLANATIONParameter = eXPLANATION != null ?
                new ObjectParameter("EXPLANATION", eXPLANATION) :
                new ObjectParameter("EXPLANATION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_payment_plan_INSERT", cODEParameter, dISCOUNTParameter, eXPLANATIONParameter);
        }
    
        public virtual int SP_product_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_product_DELETE", iDParameter);
        }
    
        public virtual int SP_product_INSERT(Nullable<int> pRODUCTTYPE, Nullable<int> gROUPCODE, Nullable<int> bRAND)
        {
            var pRODUCTTYPEParameter = pRODUCTTYPE.HasValue ?
                new ObjectParameter("PRODUCTTYPE", pRODUCTTYPE) :
                new ObjectParameter("PRODUCTTYPE", typeof(int));
    
            var gROUPCODEParameter = gROUPCODE.HasValue ?
                new ObjectParameter("GROUPCODE", gROUPCODE) :
                new ObjectParameter("GROUPCODE", typeof(int));
    
            var bRANDParameter = bRAND.HasValue ?
                new ObjectParameter("BRAND", bRAND) :
                new ObjectParameter("BRAND", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_product_INSERT", pRODUCTTYPEParameter, gROUPCODEParameter, bRANDParameter);
        }
    
        public virtual int SP_product_refund_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_product_refund_DELETE", iDParameter);
        }
    
        public virtual int SP_product_refund_INSERT(string rEASON_FOR_RETURN, Nullable<int> rETURN_QUANTITY, Nullable<System.DateTime> rETURNED_DATE)
        {
            var rEASON_FOR_RETURNParameter = rEASON_FOR_RETURN != null ?
                new ObjectParameter("REASON_FOR_RETURN", rEASON_FOR_RETURN) :
                new ObjectParameter("REASON_FOR_RETURN", typeof(string));
    
            var rETURN_QUANTITYParameter = rETURN_QUANTITY.HasValue ?
                new ObjectParameter("RETURN_QUANTITY", rETURN_QUANTITY) :
                new ObjectParameter("RETURN_QUANTITY", typeof(int));
    
            var rETURNED_DATEParameter = rETURNED_DATE.HasValue ?
                new ObjectParameter("RETURNED_DATE", rETURNED_DATE) :
                new ObjectParameter("RETURNED_DATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_product_refund_INSERT", rEASON_FOR_RETURNParameter, rETURN_QUANTITYParameter, rETURNED_DATEParameter);
        }
    
        public virtual int SP_product_type_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_product_type_DELETE", iDParameter);
        }
    
        public virtual int SP_product_type_INSERT(Nullable<int> eKLEYENKULLANICI, string eXPLANATION)
        {
            var eKLEYENKULLANICIParameter = eKLEYENKULLANICI.HasValue ?
                new ObjectParameter("EKLEYENKULLANICI", eKLEYENKULLANICI) :
                new ObjectParameter("EKLEYENKULLANICI", typeof(int));
    
            var eXPLANATIONParameter = eXPLANATION != null ?
                new ObjectParameter("EXPLANATION", eXPLANATION) :
                new ObjectParameter("EXPLANATION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_product_type_INSERT", eKLEYENKULLANICIParameter, eXPLANATIONParameter);
        }
    
        public virtual int SP_repository_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_repository_DELETE", iDParameter);
        }
    
        public virtual int SP_repository_INSERT(Nullable<int> cITY, Nullable<int> cOUNTY, Nullable<int> cOUNTRY, string rEPOSITORY_NAME)
        {
            var cITYParameter = cITY.HasValue ?
                new ObjectParameter("CITY", cITY) :
                new ObjectParameter("CITY", typeof(int));
    
            var cOUNTYParameter = cOUNTY.HasValue ?
                new ObjectParameter("COUNTY", cOUNTY) :
                new ObjectParameter("COUNTY", typeof(int));
    
            var cOUNTRYParameter = cOUNTRY.HasValue ?
                new ObjectParameter("COUNTRY", cOUNTRY) :
                new ObjectParameter("COUNTRY", typeof(int));
    
            var rEPOSITORY_NAMEParameter = rEPOSITORY_NAME != null ?
                new ObjectParameter("REPOSITORY_NAME", rEPOSITORY_NAME) :
                new ObjectParameter("REPOSITORY_NAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_repository_INSERT", cITYParameter, cOUNTYParameter, cOUNTRYParameter, rEPOSITORY_NAMEParameter);
        }
    
        public virtual int SP_sector_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_sector_DELETE", iDParameter);
        }
    
        public virtual int SP_sector_INSERT(Nullable<int> kODU, string sECTOR_NAME, string eXPLANATION)
        {
            var kODUParameter = kODU.HasValue ?
                new ObjectParameter("KODU", kODU) :
                new ObjectParameter("KODU", typeof(int));
    
            var sECTOR_NAMEParameter = sECTOR_NAME != null ?
                new ObjectParameter("SECTOR_NAME", sECTOR_NAME) :
                new ObjectParameter("SECTOR_NAME", typeof(string));
    
            var eXPLANATIONParameter = eXPLANATION != null ?
                new ObjectParameter("EXPLANATION", eXPLANATION) :
                new ObjectParameter("EXPLANATION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_sector_INSERT", kODUParameter, sECTOR_NAMEParameter, eXPLANATIONParameter);
        }
    
        public virtual int SP_shipment_slip_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_shipment_slip_DELETE", iDParameter);
        }
    
        public virtual int SP_shipment_slip_INSERT(string tYPE, string vOUCHER_NO, Nullable<System.DateTime> dATE, string dELIVERY, string eXPLANATION, string pAKAGING, Nullable<System.DateTime> cARGO_DELIVERY_DATE, string cARGO_INVOICE_NO, Nullable<decimal> tOTAL)
        {
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            var vOUCHER_NOParameter = vOUCHER_NO != null ?
                new ObjectParameter("VOUCHER_NO", vOUCHER_NO) :
                new ObjectParameter("VOUCHER_NO", typeof(string));
    
            var dATEParameter = dATE.HasValue ?
                new ObjectParameter("DATE", dATE) :
                new ObjectParameter("DATE", typeof(System.DateTime));
    
            var dELIVERYParameter = dELIVERY != null ?
                new ObjectParameter("DELIVERY", dELIVERY) :
                new ObjectParameter("DELIVERY", typeof(string));
    
            var eXPLANATIONParameter = eXPLANATION != null ?
                new ObjectParameter("EXPLANATION", eXPLANATION) :
                new ObjectParameter("EXPLANATION", typeof(string));
    
            var pAKAGINGParameter = pAKAGING != null ?
                new ObjectParameter("PAKAGING", pAKAGING) :
                new ObjectParameter("PAKAGING", typeof(string));
    
            var cARGO_DELIVERY_DATEParameter = cARGO_DELIVERY_DATE.HasValue ?
                new ObjectParameter("CARGO_DELIVERY_DATE", cARGO_DELIVERY_DATE) :
                new ObjectParameter("CARGO_DELIVERY_DATE", typeof(System.DateTime));
    
            var cARGO_INVOICE_NOParameter = cARGO_INVOICE_NO != null ?
                new ObjectParameter("CARGO_INVOICE_NO", cARGO_INVOICE_NO) :
                new ObjectParameter("CARGO_INVOICE_NO", typeof(string));
    
            var tOTALParameter = tOTAL.HasValue ?
                new ObjectParameter("TOTAL", tOTAL) :
                new ObjectParameter("TOTAL", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_shipment_slip_INSERT", tYPEParameter, vOUCHER_NOParameter, dATEParameter, dELIVERYParameter, eXPLANATIONParameter, pAKAGINGParameter, cARGO_DELIVERY_DATEParameter, cARGO_INVOICE_NOParameter, tOTALParameter);
        }
    
        public virtual int SP_sold_product_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_sold_product_DELETE", iDParameter);
        }
    
        public virtual int SP_sold_product_INSERT(string dOCUMENT_NO, Nullable<System.DateTime> dATE, Nullable<decimal> cOST, Nullable<decimal> tOTAL, Nullable<int> sproduct, Nullable<int> currency, Nullable<int> payment)
        {
            var dOCUMENT_NOParameter = dOCUMENT_NO != null ?
                new ObjectParameter("DOCUMENT_NO", dOCUMENT_NO) :
                new ObjectParameter("DOCUMENT_NO", typeof(string));
    
            var dATEParameter = dATE.HasValue ?
                new ObjectParameter("DATE", dATE) :
                new ObjectParameter("DATE", typeof(System.DateTime));
    
            var cOSTParameter = cOST.HasValue ?
                new ObjectParameter("COST", cOST) :
                new ObjectParameter("COST", typeof(decimal));
    
            var tOTALParameter = tOTAL.HasValue ?
                new ObjectParameter("TOTAL", tOTAL) :
                new ObjectParameter("TOTAL", typeof(decimal));
    
            var sproductParameter = sproduct.HasValue ?
                new ObjectParameter("sproduct", sproduct) :
                new ObjectParameter("sproduct", typeof(int));
    
            var currencyParameter = currency.HasValue ?
                new ObjectParameter("currency", currency) :
                new ObjectParameter("currency", typeof(int));
    
            var paymentParameter = payment.HasValue ?
                new ObjectParameter("payment", payment) :
                new ObjectParameter("payment", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_sold_product_INSERT", dOCUMENT_NOParameter, dATEParameter, cOSTParameter, tOTALParameter, sproductParameter, currencyParameter, paymentParameter);
        }
    
        public virtual int SP_suppliers_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_suppliers_DELETE", iDParameter);
        }
    
        public virtual int SP_suppliers_INSERT(Nullable<int> sUPTYPE, string sUPPCODE, string aPPELLATION, Nullable<bool> sTATU, string eXPLANATION, Nullable<int> tAXADMIN, string tAXADMINNUMBER, string eMAIL, Nullable<int> eINVOICETYPE, string aDRESS, string pOSTCODE, Nullable<int> cITY, Nullable<int> cOUNTY, Nullable<int> cOUNTRY, string mOBILEPHONE, string telephone, string fax, Nullable<int> sector, Nullable<int> paymentp, Nullable<int> ekleyenk, Nullable<System.DateTime> datetime)
        {
            var sUPTYPEParameter = sUPTYPE.HasValue ?
                new ObjectParameter("SUPTYPE", sUPTYPE) :
                new ObjectParameter("SUPTYPE", typeof(int));
    
            var sUPPCODEParameter = sUPPCODE != null ?
                new ObjectParameter("SUPPCODE", sUPPCODE) :
                new ObjectParameter("SUPPCODE", typeof(string));
    
            var aPPELLATIONParameter = aPPELLATION != null ?
                new ObjectParameter("APPELLATION", aPPELLATION) :
                new ObjectParameter("APPELLATION", typeof(string));
    
            var sTATUParameter = sTATU.HasValue ?
                new ObjectParameter("STATU", sTATU) :
                new ObjectParameter("STATU", typeof(bool));
    
            var eXPLANATIONParameter = eXPLANATION != null ?
                new ObjectParameter("EXPLANATION", eXPLANATION) :
                new ObjectParameter("EXPLANATION", typeof(string));
    
            var tAXADMINParameter = tAXADMIN.HasValue ?
                new ObjectParameter("TAXADMIN", tAXADMIN) :
                new ObjectParameter("TAXADMIN", typeof(int));
    
            var tAXADMINNUMBERParameter = tAXADMINNUMBER != null ?
                new ObjectParameter("TAXADMINNUMBER", tAXADMINNUMBER) :
                new ObjectParameter("TAXADMINNUMBER", typeof(string));
    
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            var eINVOICETYPEParameter = eINVOICETYPE.HasValue ?
                new ObjectParameter("EINVOICETYPE", eINVOICETYPE) :
                new ObjectParameter("EINVOICETYPE", typeof(int));
    
            var aDRESSParameter = aDRESS != null ?
                new ObjectParameter("ADRESS", aDRESS) :
                new ObjectParameter("ADRESS", typeof(string));
    
            var pOSTCODEParameter = pOSTCODE != null ?
                new ObjectParameter("POSTCODE", pOSTCODE) :
                new ObjectParameter("POSTCODE", typeof(string));
    
            var cITYParameter = cITY.HasValue ?
                new ObjectParameter("CITY", cITY) :
                new ObjectParameter("CITY", typeof(int));
    
            var cOUNTYParameter = cOUNTY.HasValue ?
                new ObjectParameter("COUNTY", cOUNTY) :
                new ObjectParameter("COUNTY", typeof(int));
    
            var cOUNTRYParameter = cOUNTRY.HasValue ?
                new ObjectParameter("COUNTRY", cOUNTRY) :
                new ObjectParameter("COUNTRY", typeof(int));
    
            var mOBILEPHONEParameter = mOBILEPHONE != null ?
                new ObjectParameter("MOBILEPHONE", mOBILEPHONE) :
                new ObjectParameter("MOBILEPHONE", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("telephone", telephone) :
                new ObjectParameter("telephone", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("fax", fax) :
                new ObjectParameter("fax", typeof(string));
    
            var sectorParameter = sector.HasValue ?
                new ObjectParameter("sector", sector) :
                new ObjectParameter("sector", typeof(int));
    
            var paymentpParameter = paymentp.HasValue ?
                new ObjectParameter("paymentp", paymentp) :
                new ObjectParameter("paymentp", typeof(int));
    
            var ekleyenkParameter = ekleyenk.HasValue ?
                new ObjectParameter("ekleyenk", ekleyenk) :
                new ObjectParameter("ekleyenk", typeof(int));
    
            var datetimeParameter = datetime.HasValue ?
                new ObjectParameter("datetime", datetime) :
                new ObjectParameter("datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_suppliers_INSERT", sUPTYPEParameter, sUPPCODEParameter, aPPELLATIONParameter, sTATUParameter, eXPLANATIONParameter, tAXADMINParameter, tAXADMINNUMBERParameter, eMAILParameter, eINVOICETYPEParameter, aDRESSParameter, pOSTCODEParameter, cITYParameter, cOUNTYParameter, cOUNTRYParameter, mOBILEPHONEParameter, telephoneParameter, faxParameter, sectorParameter, paymentpParameter, ekleyenkParameter, datetimeParameter);
        }
    
        public virtual int SP_suppliers_type_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_suppliers_type_DELETE", iDParameter);
        }
    
        public virtual int SP_suppliers_type_INSERT(string sUPPLIERS_TYPE)
        {
            var sUPPLIERS_TYPEParameter = sUPPLIERS_TYPE != null ?
                new ObjectParameter("SUPPLIERS_TYPE", sUPPLIERS_TYPE) :
                new ObjectParameter("SUPPLIERS_TYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_suppliers_type_INSERT", sUPPLIERS_TYPEParameter);
        }
    
        public virtual int SP_Tax_Administration_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Tax_Administration_DELETE", iDParameter);
        }
    
        public virtual int SP_Tax_Administration_INSERT(string tAXNAME, string tAXCODU, Nullable<int> cITY)
        {
            var tAXNAMEParameter = tAXNAME != null ?
                new ObjectParameter("TAXNAME", tAXNAME) :
                new ObjectParameter("TAXNAME", typeof(string));
    
            var tAXCODUParameter = tAXCODU != null ?
                new ObjectParameter("TAXCODU", tAXCODU) :
                new ObjectParameter("TAXCODU", typeof(string));
    
            var cITYParameter = cITY.HasValue ?
                new ObjectParameter("CITY", cITY) :
                new ObjectParameter("CITY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Tax_Administration_INSERT", tAXNAMEParameter, tAXCODUParameter, cITYParameter);
        }
    
        public virtual int SP_transport_type_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_transport_type_DELETE", iDParameter);
        }
    
        public virtual int SP_transport_type_INSERT(string tYPE, string eXPLANATION)
        {
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            var eXPLANATIONParameter = eXPLANATION != null ?
                new ObjectParameter("EXPLANATION", eXPLANATION) :
                new ObjectParameter("EXPLANATION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_transport_type_INSERT", tYPEParameter, eXPLANATIONParameter);
        }
    
        public virtual int SP_Users_authority_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Users_authority_DELETE", iDParameter);
        }
    
        public virtual int SP_Users_authority_INSERT(string aUTHORITY)
        {
            var aUTHORITYParameter = aUTHORITY != null ?
                new ObjectParameter("AUTHORITY", aUTHORITY) :
                new ObjectParameter("AUTHORITY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Users_authority_INSERT", aUTHORITYParameter);
        }
    
        public virtual int SP_Users_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Users_DELETE", iDParameter);
        }
    
        public virtual int SP_Users_INSERT(string uSERNAME, string pASSWORD, Nullable<int> eMPLOYEE, Nullable<int> cOMPANY, Nullable<int> aUTHORITY)
        {
            var uSERNAMEParameter = uSERNAME != null ?
                new ObjectParameter("USERNAME", uSERNAME) :
                new ObjectParameter("USERNAME", typeof(string));
    
            var pASSWORDParameter = pASSWORD != null ?
                new ObjectParameter("PASSWORD", pASSWORD) :
                new ObjectParameter("PASSWORD", typeof(string));
    
            var eMPLOYEEParameter = eMPLOYEE.HasValue ?
                new ObjectParameter("EMPLOYEE", eMPLOYEE) :
                new ObjectParameter("EMPLOYEE", typeof(int));
    
            var cOMPANYParameter = cOMPANY.HasValue ?
                new ObjectParameter("COMPANY", cOMPANY) :
                new ObjectParameter("COMPANY", typeof(int));
    
            var aUTHORITYParameter = aUTHORITY.HasValue ?
                new ObjectParameter("AUTHORITY", aUTHORITY) :
                new ObjectParameter("AUTHORITY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Users_INSERT", uSERNAMEParameter, pASSWORDParameter, eMPLOYEEParameter, cOMPANYParameter, aUTHORITYParameter);
        }
    
        public virtual int SP_vehicle_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_vehicle_DELETE", iDParameter);
        }
    
        public virtual int SP_vehicle_INSERT(string cODE, string cAR_PLATE, Nullable<int> gASOLINE_TANK_STATUS, Nullable<System.DateTime> tHE_LAST_MAINTANENCE_DATE, string eXPLANATION, Nullable<int> dRIVER, Nullable<int> vEHICLETYPE)
        {
            var cODEParameter = cODE != null ?
                new ObjectParameter("CODE", cODE) :
                new ObjectParameter("CODE", typeof(string));
    
            var cAR_PLATEParameter = cAR_PLATE != null ?
                new ObjectParameter("CAR_PLATE", cAR_PLATE) :
                new ObjectParameter("CAR_PLATE", typeof(string));
    
            var gASOLINE_TANK_STATUSParameter = gASOLINE_TANK_STATUS.HasValue ?
                new ObjectParameter("GASOLINE_TANK_STATUS", gASOLINE_TANK_STATUS) :
                new ObjectParameter("GASOLINE_TANK_STATUS", typeof(int));
    
            var tHE_LAST_MAINTANENCE_DATEParameter = tHE_LAST_MAINTANENCE_DATE.HasValue ?
                new ObjectParameter("THE_LAST_MAINTANENCE_DATE", tHE_LAST_MAINTANENCE_DATE) :
                new ObjectParameter("THE_LAST_MAINTANENCE_DATE", typeof(System.DateTime));
    
            var eXPLANATIONParameter = eXPLANATION != null ?
                new ObjectParameter("EXPLANATION", eXPLANATION) :
                new ObjectParameter("EXPLANATION", typeof(string));
    
            var dRIVERParameter = dRIVER.HasValue ?
                new ObjectParameter("DRIVER", dRIVER) :
                new ObjectParameter("DRIVER", typeof(int));
    
            var vEHICLETYPEParameter = vEHICLETYPE.HasValue ?
                new ObjectParameter("VEHICLETYPE", vEHICLETYPE) :
                new ObjectParameter("VEHICLETYPE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_vehicle_INSERT", cODEParameter, cAR_PLATEParameter, gASOLINE_TANK_STATUSParameter, tHE_LAST_MAINTANENCE_DATEParameter, eXPLANATIONParameter, dRIVERParameter, vEHICLETYPEParameter);
        }
    
        public virtual int SP_vehicle_type_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_vehicle_type_DELETE", iDParameter);
        }
    
        public virtual int SP_vehicle_type_INSERT(string vEHICLE_TYPE)
        {
            var vEHICLE_TYPEParameter = vEHICLE_TYPE != null ?
                new ObjectParameter("VEHICLE_TYPE", vEHICLE_TYPE) :
                new ObjectParameter("VEHICLE_TYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_vehicle_type_INSERT", vEHICLE_TYPEParameter);
        }
    
        public virtual int userlogin(string username, string password1, ObjectParameter bit1)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var password1Parameter = password1 != null ?
                new ObjectParameter("password1", password1) :
                new ObjectParameter("password1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("userlogin", usernameParameter, password1Parameter, bit1);
        }
    
        public virtual int SP_c_UPDATE(Nullable<int> iD, Nullable<int> sUPTYPE, string sUPPCODE, string aPPELLATION, Nullable<bool> sTATU, string eXPLANATION, Nullable<int> tAXADMIN, string tAXADMINNUMBER, string eMAIL, Nullable<int> eINVOICETYPE, string aDRESS, string pOSTCODE, Nullable<int> cITY, Nullable<int> cOUNTY, Nullable<int> cOUNTRY, string mOBILEPHONE, string telephone, string fax, Nullable<int> sector, Nullable<int> paymentp, Nullable<int> ekleyenk, Nullable<System.DateTime> datetime)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sUPTYPEParameter = sUPTYPE.HasValue ?
                new ObjectParameter("SUPTYPE", sUPTYPE) :
                new ObjectParameter("SUPTYPE", typeof(int));
    
            var sUPPCODEParameter = sUPPCODE != null ?
                new ObjectParameter("SUPPCODE", sUPPCODE) :
                new ObjectParameter("SUPPCODE", typeof(string));
    
            var aPPELLATIONParameter = aPPELLATION != null ?
                new ObjectParameter("APPELLATION", aPPELLATION) :
                new ObjectParameter("APPELLATION", typeof(string));
    
            var sTATUParameter = sTATU.HasValue ?
                new ObjectParameter("STATU", sTATU) :
                new ObjectParameter("STATU", typeof(bool));
    
            var eXPLANATIONParameter = eXPLANATION != null ?
                new ObjectParameter("EXPLANATION", eXPLANATION) :
                new ObjectParameter("EXPLANATION", typeof(string));
    
            var tAXADMINParameter = tAXADMIN.HasValue ?
                new ObjectParameter("TAXADMIN", tAXADMIN) :
                new ObjectParameter("TAXADMIN", typeof(int));
    
            var tAXADMINNUMBERParameter = tAXADMINNUMBER != null ?
                new ObjectParameter("TAXADMINNUMBER", tAXADMINNUMBER) :
                new ObjectParameter("TAXADMINNUMBER", typeof(string));
    
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            var eINVOICETYPEParameter = eINVOICETYPE.HasValue ?
                new ObjectParameter("EINVOICETYPE", eINVOICETYPE) :
                new ObjectParameter("EINVOICETYPE", typeof(int));
    
            var aDRESSParameter = aDRESS != null ?
                new ObjectParameter("ADRESS", aDRESS) :
                new ObjectParameter("ADRESS", typeof(string));
    
            var pOSTCODEParameter = pOSTCODE != null ?
                new ObjectParameter("POSTCODE", pOSTCODE) :
                new ObjectParameter("POSTCODE", typeof(string));
    
            var cITYParameter = cITY.HasValue ?
                new ObjectParameter("CITY", cITY) :
                new ObjectParameter("CITY", typeof(int));
    
            var cOUNTYParameter = cOUNTY.HasValue ?
                new ObjectParameter("COUNTY", cOUNTY) :
                new ObjectParameter("COUNTY", typeof(int));
    
            var cOUNTRYParameter = cOUNTRY.HasValue ?
                new ObjectParameter("COUNTRY", cOUNTRY) :
                new ObjectParameter("COUNTRY", typeof(int));
    
            var mOBILEPHONEParameter = mOBILEPHONE != null ?
                new ObjectParameter("MOBILEPHONE", mOBILEPHONE) :
                new ObjectParameter("MOBILEPHONE", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("telephone", telephone) :
                new ObjectParameter("telephone", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("fax", fax) :
                new ObjectParameter("fax", typeof(string));
    
            var sectorParameter = sector.HasValue ?
                new ObjectParameter("sector", sector) :
                new ObjectParameter("sector", typeof(int));
    
            var paymentpParameter = paymentp.HasValue ?
                new ObjectParameter("paymentp", paymentp) :
                new ObjectParameter("paymentp", typeof(int));
    
            var ekleyenkParameter = ekleyenk.HasValue ?
                new ObjectParameter("ekleyenk", ekleyenk) :
                new ObjectParameter("ekleyenk", typeof(int));
    
            var datetimeParameter = datetime.HasValue ?
                new ObjectParameter("datetime", datetime) :
                new ObjectParameter("datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_c_UPDATE", iDParameter, sUPTYPEParameter, sUPPCODEParameter, aPPELLATIONParameter, sTATUParameter, eXPLANATIONParameter, tAXADMINParameter, tAXADMINNUMBERParameter, eMAILParameter, eINVOICETYPEParameter, aDRESSParameter, pOSTCODEParameter, cITYParameter, cOUNTYParameter, cOUNTRYParameter, mOBILEPHONEParameter, telephoneParameter, faxParameter, sectorParameter, paymentpParameter, ekleyenkParameter, datetimeParameter);
        }
    
        public virtual int SP_sold_product_UPDATE(string dOCUMENT_NO, Nullable<decimal> cOST, Nullable<decimal> tOTAL, Nullable<int> sproduct, Nullable<int> currency, Nullable<int> payment, Nullable<int> vechile, Nullable<int> id)
        {
            var dOCUMENT_NOParameter = dOCUMENT_NO != null ?
                new ObjectParameter("DOCUMENT_NO", dOCUMENT_NO) :
                new ObjectParameter("DOCUMENT_NO", typeof(string));
    
            var cOSTParameter = cOST.HasValue ?
                new ObjectParameter("COST", cOST) :
                new ObjectParameter("COST", typeof(decimal));
    
            var tOTALParameter = tOTAL.HasValue ?
                new ObjectParameter("TOTAL", tOTAL) :
                new ObjectParameter("TOTAL", typeof(decimal));
    
            var sproductParameter = sproduct.HasValue ?
                new ObjectParameter("sproduct", sproduct) :
                new ObjectParameter("sproduct", typeof(int));
    
            var currencyParameter = currency.HasValue ?
                new ObjectParameter("currency", currency) :
                new ObjectParameter("currency", typeof(int));
    
            var paymentParameter = payment.HasValue ?
                new ObjectParameter("payment", payment) :
                new ObjectParameter("payment", typeof(int));
    
            var vechileParameter = vechile.HasValue ?
                new ObjectParameter("vechile", vechile) :
                new ObjectParameter("vechile", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_sold_product_UPDATE", dOCUMENT_NOParameter, cOSTParameter, tOTALParameter, sproductParameter, currencyParameter, paymentParameter, vechileParameter, idParameter);
        }
    }
}
